version: 2.1

jobs:

  image:
    resource_class: small
    docker:
      - image: docker:20.10.11-git
    steps:
      - run:
          name: "Display kernel version"
          command: uname -a
      - checkout
      - run:
          name: "Checkout subrepositories"
          command: |
            git submodule update --recursive --init
            git submodule sync --recursive
      - setup_remote_docker:
          version: 20.10.11
      - run:
          name: "Build docker image"
          command: >
            docker build
            --tag slach/archstrap:$CIRCLE_SHA1
            --build-arg archlinux_mirror_url=https://mirrors.kernel.org/archlinux
            --build-arg login=slach
            .
      - run:
          name: "Push docker image"
          command: |
            docker login -u slach -p $DOCKERHUB_PASSWORD
            docker push slach/archstrap:$CIRCLE_SHA1

  filesystems:
    machine:
      image: ubuntu-2004:202111-02
      resource_class: medium
    steps:
      - run:
          name: "Extract tarball from docker image"
          command: |
            docker run -d --rm --name archstrap slach/archstrap:$CIRCLE_SHA1 sleep infinity
            docker export archstrap > archstrap.tar
            docker stop archstrap
      - run:
          name: "Create filesystems"
          command: |
            mkdir -p tarball
            tar -xf archstrap.tar -C tarball
            chown -R root:root tarball
            chmod +t tarball/usr/bin/sudo
            chown -R 1000:1000 tarball/home
            ls -lah tarball/*
            tar -cf root.tar --exclude=home --exclude=boot -C tarball .
            tar -cf home.tar -C tarball/home .
            docker run -v `pwd`:/data --rm slach/tar2ext4:stable home.tar home.img 2G HOME
            docker run -v `pwd`:/data --rm slach/tar2ext4:stable root.tar root.img 10G ROOT
      - run:
          name: "Generate bootloader image"
          command: >
            docker run
            -v `pwd`:/data
            -v `readlink -f tarball/boot`:/boot
            --rm
            slach/groob
      - run:
          name: "List available files"
          command: |
            ls -lah `pwd`
      - run:
          name: "Merge filesystems"
          command: |
            touch archstrap.img
            dd if=groob.img of=archstrap.img bs=1M oflag=append conv=notrunc
            dd if=root.img of=archstrap.img bs=1M oflag=append conv=notrunc
            dd if=home.img of=archstrap.img bs=1M oflag=append conv=notrunc
            parted -s -a none archstrap.img mkpart primary ext4 1025MiB 11265MiB
            parted -s -a none archstrap.img mkpart primary ext4 11265MiB 100%
            ls -lh *.img
      - run:
          name: "Compress distribution image"
          command: |
            gzip archstrap.img
      - run:
          name: "Push distribution image"
          command: |
            docker run -d -it --rm --name distro alpine sh
            docker cp archstrap.img.gz distro:/archstrap.img.gz
            docker commit distro slach/distro:$CIRCLE_SHA1
            docker stop distro
            docker login -u slach -p $DOCKERHUB_PASSWORD
            docker push slach/distro:$CIRCLE_SHA1
      - store_artifacts:
          path: archstrap.img.gz

workflows:
  build:
    jobs:
      - image
      - filesystems:
          requires:
            - image
